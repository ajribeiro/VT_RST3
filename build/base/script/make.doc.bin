#!/bin/bash

set -e

# make.doc.bin
# ============
# Author: R.J.Barnes
#
# Purpose:
#
# Constructs web pages from XML documentation
#
# Syntax:
#
# make.doc.bin [-w] fname
#
# Description:
#
# Makes documentation for a binary.
#

############################################################################

############################################################################

# Locate pnmtopng

############################################################################

pnmtopng=${PNMTOPNG}

############################################################################

# Command line options

############################################################################

type="local"

for arg in ${*}
  do
    if test "${arg}" = "-w"
    then
       type="www"
    else
       fname=${arg}
    fi
  done

############################################################################

# Define working directories

############################################################################

wwwpath="${DOCPATH}/html"

if test "${type}" = "www"
then
  wwwpath=${WWWPATH}
  urlbase=${URLBASE}
fi

TMPFILE=`mktemp -q /tmp/doc.XXXXXX`
mkdir ${TMPFILE}.d
chmod a+w ${TMPFILE}.d
tmp=${TMPFILE}.d

build=${BUILD}/base/doc

############################################################################

# Configuration files

############################################################################

bincfg="${build}/cfg/bin.cfg.xml"
bintagdb="${build}/tagdb/bin.tagdb.xml"

binsc="${build}/sk/bin.${type}.sk"

############################################################################

# Define temporary files

############################################################################

nmexml="${tmp}/binname.xml"
tagdb="${tmp}/bin.tagdb.xml"

############################################################################

# Get information

############################################################################

xmlname=${fname##*/}

project=`xmldoc -script "<!--PROJECT-->" \
              -sctype 0 . ${bincfg} ${fname}`
binname=`xmldoc -script "<!--NAME-->" -sctype 0 \
         . ${bincfg} ${fname}`
binloct=`xmldoc -script "<!--LOCATION-->" -sctype 0 \
         . ${bincfg} ${fname}`

############################################################################

# Find relative URL

############################################################################

if test "${type}" != "www"
then
  relpath=""
  binpath=${project}/${binloct}/
  while test ${binpath}
  do
    relpath="../"${relpath}
    binpath=${binpath#*/} 
  done
  urlbase=${relpath%/}
fi

export URLBASE="${urlbase}"


############################################################################

# Build documentation pages

############################################################################

homeurl="${urlbase}/${project}/index.html"
indexurl="${urlbase}/${project}/src.bin/indexdoc.html"

# 
# Take apart the location string so that we can build a navigation link
#

ltree=${binloct%/*}/
path=""
str=""

while test -n "${ltree}"
  do
    dir=${ltree%%/*}
    path=${path}"/"${dir}
    str=${str}"<td>|</td><td>&lt;a href="
    str=${str}${urlbase}"/"${project}${path}"/index.html&gt;"
    str=${str}${dir}"&lt;/a&gt;</td>"
    ltree=${ltree#*/}
  done

#
# Create the temporary XML file containing the binary name and
# the URL of the binary index page.
#

home="&lt;a href="${homeurl}"&gt;"${project}"&lt;/a&gt;"
index="&lt;a href="${indexurl}"&gt;Index&lt;/a&gt;"
xml="&lt;a href="${xmlname}"&gt;"${xmlname}"&lt;/a&gt;"


echo "<table>" > ${nmexml}
echo "<entry>" >> ${nmexml}
echo "<search>BINARY</search>" >> ${nmexml}
echo "<replace>"${binname}"</replace>" >> ${nmexml}
echo "</entry>" >> ${nmexml}

echo "<entry>" >> ${nmexml}
echo "<search>HOME</search>" >> ${nmexml}
echo "<replace>"${home}"</replace>" >> ${nmexml}
echo "</entry>" >> ${nmexml}

echo "<entry>" >> ${nmexml}
echo "<search>PATH</search>" >> ${nmexml}
echo "<replace>"${str}"</replace>" >> ${nmexml}
echo "</entry>" >> ${nmexml}

echo "<entry>" >> ${nmexml}
echo "<search>INDEX</search>" >> ${nmexml}
echo "<replace>"${index}"</replace>" >> ${nmexml}
echo "</entry>" >> ${nmexml}

echo "<entry>" >> ${nmexml}
echo "<search>URLBASE</search>" >> ${nmexml}
echo "<replace>${urlbase}</replace>" >> ${nmexml}
echo "</entry>" >> ${nmexml}


echo "<entry>" >> ${nmexml}
echo "<search>XML</search>" >> ${nmexml}
echo "<replace>"${xml}"</replace>" >> ${nmexml}
echo "</entry>" >> ${nmexml}

echo "</table>" >> ${nmexml}

cat ${bintagdb} > ${tagdb}


#
# Each binary is installed in a unique directory which contains
# sub-directories for extra files such as examples and images.
#

echo "Building directory structure:"
echo ${wwwpath}/${project}/${binloct}

if test ! -d ${wwwpath}/${project}/${binloct}
  then 
    mkdir -p ${wwwpath}/${project}/${binloct}
  fi

if test ! -d ${wwwpath}/${project}/${binloct}/img
  then 
    mkdir -p ${wwwpath}/${project}/${binloct}/img
  fi


# Determine if the binary has a version number. If it has
# use the highest version number as the source
#
#


binpath=${CODEBASE}/${project}/${binloct}

if test ! -d ${binpath}
then
  bpath=${binloct%/*}
  bname=${binloct##*/}
  blist=`find ${CODEBASE}/${project}/${bpath} -maxdepth 1 -name "${bname}.*" \
              | sort`
  binpath=${blist##* }
fi


# if image files exist, copy them to the web

if test -d ${binpath}/doc/img
then 
  ilist=`find ${binpath}/doc/img -type f`
  for img in $ilist
  do
    fleaf=${img##*/}
    cat ${img} > ${wwwpath}/${project}/${binloct}/img/${fleaf}
  done
fi

echo "Building:${wwwpath}/${binloct}/index.html" 

xmldoc -script ${binsc} -sctype 1 ${tmp} ${bincfg} ${fname} \
                > ${wwwpath}/${project}/${binloct}/index.html

chmod a+x ${wwwpath}/${project}/${binloct}/index.html

#
# Copy the xml version of the documentation
#

cat ${fname} > ${wwwpath}/${project}/${binloct}/${xmlname}

############################################################################

# Cleanup

############################################################################

rm -fr ${tmp}
rm -fr ${TMPFILE}
exit 0






