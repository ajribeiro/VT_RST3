;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;+
;NAME:
; plot_fitex2
;
; PURPOSE:
; Plots the results of fitting ACFs from 1 beam sounding with the fitacfex2 algorithm
;
; CATEGORY:
; Graphics
;
; CALLING SEQUENCE:
; first call the c routine test_fitex2, e.g.
; 	test_fitex2 [-new] -hr 5 -min 3 -beam 7 myfile.rawacf > /rst/output_files/fitex2.test
;
; next, call the IDL routine, e.g.
; 	plot_fitex2
;
; OPTIONAL INPUTS:
;
; KEYWORD PARAMETERS:
;
; EXAMPLE:
; test_fitex2 -new -hr 5 -min 3 -beam 7 myfile.rawacf > /rst/output_files/fitex2.test
; plot_fitex2
;
; OUTPUT:
; /rst/output_plots/fitex2.ps
;
;
; COPYRIGHT:
; Copyright (C) 2011 by Virginia Tech
;
; Permission is hereby granted, free of charge, to any person obtaining a copy
; of this software and associated documentation files (the "Software"), to deal
; in the Software without restriction, including without limitation the rights
; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
; copies of the Software, and to permit persons to whom the Software is
; furnished to do so, subject to the following conditions:
;
; The above copyright notice and this permission notice shall be included in
; all copies or substantial portions of the Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
; THE SOFTWARE.
;
;
; MODIFICATION HISTORY:
; Written by AJ Ribeiro 07/15/2011
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

pro plot_fitex2
  ;the file we are reading data from
  file_in = '/rst/output_files/fitex2.test'

  ;the file we are plotting to
  set_plot,'PS',/copy
  device,/landscape,/COLOR,BITS_PER_PIXEL=8,filename='/rst/output_plots/fitex2.ps'

  S = findgen(17)*(!PI*2./16.)
  !p.multi = [0,1,1]

	;open the file
  openr,unit,file_in,/get_lun

	;read the first lines
  readf,unit,nrang,mplgs,skynoise,tfreq,mpinc,nslopes,diff
  readf,unit,stid,yr,mo,dy,hr,mt,sc,bmnum

  lambda = 3.e8/(tfreq*1.e3)
	;get rad info
  radar_info,stid,glat,glon,mlat,mlon,oneletter,threeletter,name,STID_FLG=fix(stid)
  date_str = name+'				'+$
							strtrim(fix(yr),2)+'/'+strtrim(fix(mo),2)+'/'+strtrim(fix(dy),2)
  date_str = date_str+'				'
  date_str = date_str+strtrim(fix(hr),2)+':'+strtrim(fix(mt),2)+':'+strtrim(fix(sc),2)
  date_str = date_str+'				'
  date_str = date_str+'Beam: '+strtrim(fix(bmnum),2)
    date_str = date_str+'				'
  date_str = date_str+'Freq: '+strtrim(fix(tfreq),2)

  ;declare the arrays
	lagnums = intarr(nrang,mplgs)
	acfs = dblarr(nrang,mplgs,2)
	good_lags = intarr(nrang,mplgs)
	pwr_flgs = intarr(nrang)
	lag_flgs = intarr(nrang)
	fluct_levs = intarr(nrang)
	widths = dblarr(nrang)
	snrs = dblarr(nrang)
	models = dblarr(nrang,nslopes+1,2)
	threshs = dblarr(nrang)
	mininds = intarr(nrang)
	pwr2_flgs = intarr(nrang)
	err_flgs = intarr(nrang)
	b_guesses = dblarr(nrang,101,2)
	b_nums = intarr(nrang)
	final_params = dblarr(nrang,3)


	;read the rest of the file
	for i=0,nrang-1 do begin
		readf,unit,r,fluct
		fluct_levs(i) = fluct
		;read the acfs
		for j=0,mplgs-1 do begin
			readf,unit,l,re,im,flg
			lagnums(i,j) = l
			acfs(i,j,0) = re
			acfs(i,j,1) = im
			good_lags(i,j) = flg
		endfor
		;read the params that determine if fitting is performed
		readf,unit,pflg,lflg
		pwr_flgs(i) = pflg
		lag_flgs(i) = lflg
		;if a fit was performed
		if(pflg AND lflg) then begin
			readf,unit,p,w
			widths(i) = w
			snrs(i) = p
			;read the models and errors
			for k=0,nslopes*2 do begin
				readf,unit,s,e
				models(i,k,0) = s
				models(i,k,1) = e
			endfor
			readf,unit,t,mini,pflg,eflg
			if(pflg AND eflg) then begin
				for g=0,500 do begin
					readf,unit,temp
					if(temp eq 4321) then begin
						break
					endif else begin
						b_guesses(i,b_nums(i),0) = temp
						readf,unit,temp
						b_guesses(i,b_nums(i),1) = temp
						b_nums(i) = b_nums(i) + 1
					endelse
				endfor
				readf,unit,w,v,ve
				final_params(i,0) = w
				final_params(i,1) = v
				final_params(i,2) = ve
			endif
		endif
	endfor




  ;close the postscript file
  device,/close
end

